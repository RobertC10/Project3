
21 Nov 22
----------------------------------------------------------------------------------------------------------------
    move() in actions probably will not work because it needs to directly access our map object. This means that even if we could pass our map object into the our move(),
we would need to return that map object to our main Driver. Because the Map class already has a move() function, I have opted to just use that instead. - RC

    I am thinking, we could have like a reccursive function. kinda. We could have the main menu function or whatever and it would just point the player to the right function
passing what needs to be passed through. Like it could point to the Actions Normal function and once that's done it would just go back to the main which would thenn point it 
to the right function again. For example:

        Main(prints map, if on a normal spot, go to Actions-Normal) --> 
        ActionsNormal(has player do the actions they want to, changes map, party, and members, and all that needs to be changed, then passes the objects that could be changed-
        through back to the Main function) -->'
        Main(if player is in a room, pass everything to RoomActions function) -->
        RoomActions(So on and so forth)

    -RC

    Need to change cookware and weapons array in Party class to have addweapons and subtractweapons for cookware too; See Treasure functions. - RC

    Monster fights need to be updated for NormalAction() function in MainDriver.cpp - RC

    We need the Merchant menu to be completed so we can change the amount of Ingredients and cookware so we can cook and eat food. This goes for really most of the
stuff becasue we need a way to change armor and stuff like that as well so we can work on misfortunes. - RC

    NormalActions in actions.cpp also does not work when it's in actions.cpp - RC

    Reason for different Action functions: we need different sets of actions depending on if we're on a room space, open space, or an npc space - RC
    
    Will also work on making comments and discriptions for each function in my classes throughout the week. - RC


22 Nov 22
----------------------------------------------------------------------------------------------------------------------------------------------------------

    Added NPCactions and RoomActions in Main Driver. Both still need the NPC interaction and the monster fight respectively. I also worked on the door puzzle for the room.
I finished the rock paper scissors game but I'm thinking of making a connect 4 game as well. Just for shits and giggles. But yeah need the NPC and Mob classes updated to work on 
finishing the actions. - RC

    changed and need to change some things in Party class. Mainly changing the setters to add and subtract functions. - RC

    Putting thoughts on to the screen here, what we need left is:
        - Finish the Merchant menu
        - Monster fight
        - Cooking and eating food
        - changing Sorcerer's anger every turn
        - make checks every turn to make sure that people aren't dead or about to die, at least by hunger 
        - make checks every turn to make sure that any conditions to end the game haven't happened
        - implement misfortunes
        - change armor cookware and weapons functions in Party to add and subtract
        - do NPC puzzles

23 Nov 22
------------------------------------------------------------------------------------------------------------------------
    Added muthafuckinass connect 4 for one of the door puzzles - RC

    still definitely need to check every time we go through that we haven't won or lost. - RC

    Also made it so that in printMenu() for Party class, it only prints that party members that are alive. - RC

24 Nov 22
------------------------------------------------------------------------------------------------------------------------
    Added a psuedoMenu for the merchant (original became bugged along with most others involving Mob and NPC classes)
    It should be up and ready for testing. Potential usage inside an action class instead for creation each time 
    interaction with NPC occurs? - JW

    still definitely need to check redo Mob class (managing to split the text file fine but accessing other classes and
    storing these mobs become hazy and bug the shit out of the rest of the code). - JW

    Also began on new system for Sorcerer anger. Rather than putting it in Mob class, will be focused into actions class
    as a function applied for any action respectively. It should be up and running in a few hours since this commit. - JW

    Run over the menu (operational one should be inside phaseTwo already) and let me know if anything is bugged with the 
    MerchantMenu draft I made or anything good about it that I might be able to use or implement in other classes. 
    (Also note it might not first work since I may have labeled the party members being used incorrectly which you should
    be able to easily fix with CTRL-F for respective mistakes) -JW

    Finally...HAPPY MUTHAFUKIN THANKSGIVING -JW

    HAPPT THAGNKGINVING - RC

    I went ahead and deleted the merchantmenu from phaseTwo because it seemed like it was pretty much an exact copy of MerchantMenu function in NPC.cpp. 
    If there's things that needed to be changed from the normal npc menu to the original merchantmenu that needs to be shown at the beginning of the game, let me know. - RC

    I'm going to be straight up with you here. There's an unbelievable amount of errors. Mostly for the NPC class' Merchant Menu. Alot 
    of the things are pretty easy to fix, it's probalby just gonna take a bit of time. Here's an example that containts most of the errors 
    that are made in the function:

        cout << "And to how much you prefer? (Enter a positive integer, or 0 to cancel)" << endl;
        cin >> quantity2;
        cout << "You sure about buying " << quantity2 << " clubs for " << quantity2 * 2  << " gold? (y/n)" << endl;
        << "" << endl;
        cin >> choice3
        if (choice3 == 'Y' || choice3 == 'y')
        {
            gold = gold - (quantity2 * 2);
            weapons[0] += quantity2;
            cout << "Thanks as always! Any other fancy catch yer eye?" << endl;
            return merchantMarket(party_);
        }
    
    -In the conditions for the if statement, since choice3 is a string, you i guess don't have to but if the user decides to type something like "yes"
        or something like that, it is not a single character so it needs to be that if the first character of choice3 is 'Y' or 'y'
    -In the third line, when you cout, you have a semicolon that makes an error for the 4th line because there is not cout in the 4th line.
    -There is no semicolon at the end of line 5
    -Where you change the gold and weapons, since they are apart of the party class and are private, you'll have to use public fucnntions to change them
        as opposed to trying to change them directly. I've fixed the errors for some of the code so examples are there.

    Example of a fixed one:
        cout << "And to how much you prefer? (Enter a positive integer, or 0 to cancel)" << endl;
        cin >> quantity2;
        cout << "You sure about buying " << quantity2 << " clubs for " << quantity2 * 2  << " gold? (y/n)" << endl
        << "" << endl;
        cin >> choice3;
        if (choice3[0] == 'Y' || choice3[0] == 'y')
        {
            if(party_.subGold((quantity2 * 2)) == 0)
            {
                cout<<"You don't have enough gold to buy that."<<endl;
            }
            party_.addCookwareAt(itemSelect3 - 1, quantity2);
            cout << "Thanks as always! Any other fancy catch yer eye?" << endl;
            return merchantMarket(party_);
        }
    
    I'll work more on this tmr too.
    -RC

    If you are literally fixing the errors as I type this, then fuck, mb. - RC

25 Nov 22
------------------------------------------------------------------------------------------------------------------------
Lmao that's all good. Yeah, I went ahead and committed those changes and other typos I caught. Unfortunately I have no 
idea: how do you want me to implement it and test it? I thought phase Two needs to do it cuz thats how you get starting
items at the beginning? (If you decide on another way to do that tho, lemme know and tell me if the menu works). Apart 
from that, hmu if you spot any more errors in the file. -JW

As you said, yeah the beginning menu might have to just be a tad different, being a completely own menu that appears at 
the beginning using my_party instead but it should'nt be too different. If anything NPC class's menu might be adjusted
(it was originally made to act as its own action function, i just threw it in NPC class for my benefit). Either
way works really, I would just have to finish NPC class first. -JW

Majority of today is finishing the Sorcerer Anger funct. & attempts to relocate and establish the NPC class to help out a bit with Phase 2. -JW

Reworks:
 - Mob class (probable rework in key drops as part of monster fight action
 - Sorcerer Anger as independent action funct to be collectively gained overtime per each respective action
 - NPC class (will not include Mob for the time being) will be developed
                                                                            -JW

28 NOV 22
------------------------------------------------------------------------------------------------------------
Changed party class a bit to access easier - RC

Added cook and eat to Main Driver - RC

Need to implement setWeapons for the User to actually access - RC

New requirement: since in a group, need to implement a sorting/ranking system in which every time a game ends
player must be put on a collective leaderboard. (potentially a vector txt file that compares rooms cleared end 
of each game?) - JW

Completed Sorcerer's Anger action, to be committed along with Mob class and monster fight - JW

Need to implement mob into NPC class and puzzle to befriend NPC - JW


